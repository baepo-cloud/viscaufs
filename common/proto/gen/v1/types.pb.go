// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v1/types.proto

package fspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inode     uint64 `protobuf:"varint,1,opt,name=inode,proto3" json:"inode,omitempty"`
	Size      int64  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Blocks    int64  `protobuf:"varint,3,opt,name=blocks,proto3" json:"blocks,omitempty"`
	Atime     int64  `protobuf:"varint,4,opt,name=atime,proto3" json:"atime,omitempty"`
	Mtime     int64  `protobuf:"varint,5,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Ctime     int64  `protobuf:"varint,6,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Atimensec int64  `protobuf:"varint,7,opt,name=atimensec,proto3" json:"atimensec,omitempty"`
	Mtimensec int64  `protobuf:"varint,8,opt,name=mtimensec,proto3" json:"mtimensec,omitempty"`
	Ctimensec int64  `protobuf:"varint,9,opt,name=ctimensec,proto3" json:"ctimensec,omitempty"`
	Mode      uint32 `protobuf:"varint,10,opt,name=mode,proto3" json:"mode,omitempty"`
	Nlink     uint64 `protobuf:"varint,11,opt,name=nlink,proto3" json:"nlink,omitempty"`
	Uid       uint32 `protobuf:"varint,12,opt,name=uid,proto3" json:"uid,omitempty"`
	Gid       uint32 `protobuf:"varint,13,opt,name=gid,proto3" json:"gid,omitempty"`
	Rdev      uint64 `protobuf:"varint,14,opt,name=rdev,proto3" json:"rdev,omitempty"`
	Blksize   int64  `protobuf:"varint,15,opt,name=blksize,proto3" json:"blksize,omitempty"`
}

func (x *FileAttributes) Reset() {
	*x = FileAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_types_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAttributes) ProtoMessage() {}

func (x *FileAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_v1_types_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAttributes.ProtoReflect.Descriptor instead.
func (*FileAttributes) Descriptor() ([]byte, []int) {
	return file_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *FileAttributes) GetInode() uint64 {
	if x != nil {
		return x.Inode
	}
	return 0
}

func (x *FileAttributes) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileAttributes) GetBlocks() int64 {
	if x != nil {
		return x.Blocks
	}
	return 0
}

func (x *FileAttributes) GetAtime() int64 {
	if x != nil {
		return x.Atime
	}
	return 0
}

func (x *FileAttributes) GetMtime() int64 {
	if x != nil {
		return x.Mtime
	}
	return 0
}

func (x *FileAttributes) GetCtime() int64 {
	if x != nil {
		return x.Ctime
	}
	return 0
}

func (x *FileAttributes) GetAtimensec() int64 {
	if x != nil {
		return x.Atimensec
	}
	return 0
}

func (x *FileAttributes) GetMtimensec() int64 {
	if x != nil {
		return x.Mtimensec
	}
	return 0
}

func (x *FileAttributes) GetCtimensec() int64 {
	if x != nil {
		return x.Ctimensec
	}
	return 0
}

func (x *FileAttributes) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *FileAttributes) GetNlink() uint64 {
	if x != nil {
		return x.Nlink
	}
	return 0
}

func (x *FileAttributes) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *FileAttributes) GetGid() uint32 {
	if x != nil {
		return x.Gid
	}
	return 0
}

func (x *FileAttributes) GetRdev() uint64 {
	if x != nil {
		return x.Rdev
	}
	return 0
}

func (x *FileAttributes) GetBlksize() int64 {
	if x != nil {
		return x.Blksize
	}
	return 0
}

type FSNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string          `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Attributes    *FileAttributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
	LayerPosition uint32          `protobuf:"varint,3,opt,name=layer_position,json=layerPosition,proto3" json:"layer_position,omitempty"`
	SymlinkTarget *string         `protobuf:"bytes,4,opt,name=symlink_target,json=symlinkTarget,proto3,oneof" json:"symlink_target,omitempty"`
}

func (x *FSNode) Reset() {
	*x = FSNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_types_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSNode) ProtoMessage() {}

func (x *FSNode) ProtoReflect() protoreflect.Message {
	mi := &file_v1_types_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSNode.ProtoReflect.Descriptor instead.
func (*FSNode) Descriptor() ([]byte, []int) {
	return file_v1_types_proto_rawDescGZIP(), []int{1}
}

func (x *FSNode) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FSNode) GetAttributes() *FileAttributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *FSNode) GetLayerPosition() uint32 {
	if x != nil {
		return x.LayerPosition
	}
	return 0
}

func (x *FSNode) GetSymlinkTarget() string {
	if x != nil && x.SymlinkTarget != nil {
		return *x.SymlinkTarget
	}
	return ""
}

type FSIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paths       []*FSNode `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	WithoutDir  []string  `protobuf:"bytes,2,rep,name=without_dir,json=withoutDir,proto3" json:"without_dir,omitempty"`
	WithoutFile []string  `protobuf:"bytes,3,rep,name=without_file,json=withoutFile,proto3" json:"without_file,omitempty"`
	Version     uint32    `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *FSIndex) Reset() {
	*x = FSIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_types_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSIndex) ProtoMessage() {}

func (x *FSIndex) ProtoReflect() protoreflect.Message {
	mi := &file_v1_types_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSIndex.ProtoReflect.Descriptor instead.
func (*FSIndex) Descriptor() ([]byte, []int) {
	return file_v1_types_proto_rawDescGZIP(), []int{2}
}

func (x *FSIndex) GetPaths() []*FSNode {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *FSIndex) GetWithoutDir() []string {
	if x != nil {
		return x.WithoutDir
	}
	return nil
}

func (x *FSIndex) GetWithoutFile() []string {
	if x != nil {
		return x.WithoutFile
	}
	return nil
}

func (x *FSIndex) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

var File_v1_types_proto protoreflect.FileDescriptor

var file_v1_types_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x14, 0x62, 0x61, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x69, 0x73, 0x63, 0x61, 0x75, 0x66, 0x73,
	0x2e, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x22, 0xea, 0x02, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x74, 0x69,
	0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x74,
	0x69, 0x6d, 0x65, 0x6e, 0x73, 0x65, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6c, 0x69, 0x6e,
	0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x64, 0x65, 0x76, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x72, 0x64, 0x65, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x6c, 0x6b,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x6c, 0x6b, 0x73,
	0x69, 0x7a, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x06, 0x46, 0x53, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x44, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x61, 0x65, 0x70, 0x6f, 0x2e, 0x76,
	0x69, 0x73, 0x63, 0x61, 0x75, 0x66, 0x73, 0x2e, 0x66, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x0e, 0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x79, 0x6d, 0x6c, 0x69,
	0x6e, 0x6b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f,
	0x73, 0x79, 0x6d, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x9b,
	0x01, 0x0a, 0x07, 0x46, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61,
	0x74, 0x68, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x62, 0x61, 0x65, 0x70,
	0x6f, 0x2e, 0x76, 0x69, 0x73, 0x63, 0x61, 0x75, 0x66, 0x73, 0x2e, 0x66, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x46, 0x53, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x44, 0x69, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68, 0x6f, 0x75, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x35, 0x5a, 0x33,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x65, 0x70, 0x6f,
	0x2d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x76, 0x69, 0x73, 0x63, 0x61, 0x75, 0x66, 0x73, 0x2d,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x66, 0x73, 0x70, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x66,
	0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_types_proto_rawDescOnce sync.Once
	file_v1_types_proto_rawDescData = file_v1_types_proto_rawDesc
)

func file_v1_types_proto_rawDescGZIP() []byte {
	file_v1_types_proto_rawDescOnce.Do(func() {
		file_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_types_proto_rawDescData)
	})
	return file_v1_types_proto_rawDescData
}

var file_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_v1_types_proto_goTypes = []interface{}{
	(*FileAttributes)(nil), // 0: baepo.viscaufs.fs.v1.FileAttributes
	(*FSNode)(nil),         // 1: baepo.viscaufs.fs.v1.FSNode
	(*FSIndex)(nil),        // 2: baepo.viscaufs.fs.v1.FSIndex
}
var file_v1_types_proto_depIdxs = []int32{
	0, // 0: baepo.viscaufs.fs.v1.FSNode.attributes:type_name -> baepo.viscaufs.fs.v1.FileAttributes
	1, // 1: baepo.viscaufs.fs.v1.FSIndex.paths:type_name -> baepo.viscaufs.fs.v1.FSNode
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_v1_types_proto_init() }
func file_v1_types_proto_init() {
	if File_v1_types_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_types_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_types_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_types_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_types_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_types_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_types_proto_goTypes,
		DependencyIndexes: file_v1_types_proto_depIdxs,
		MessageInfos:      file_v1_types_proto_msgTypes,
	}.Build()
	File_v1_types_proto = out.File
	file_v1_types_proto_rawDesc = nil
	file_v1_types_proto_goTypes = nil
	file_v1_types_proto_depIdxs = nil
}
