syntax = "proto3";

package baepo.viscaufs.fs.v1;

option go_package = "github.com/baepo-cloud/viscaufs-common/fspb/v1;fspb";

import "v1/types.proto";

message File {
  string path = 1;
  FileAttributes attributes = 2;
  optional string symlink_target = 3;
}

message PrepareImageRequest {
  string image_ref = 1;
}

message PrepareImageResponse {
  string image_digest = 1;
}

message ImageReadyRequest {
  string image_digest = 1;
}

message ImageReadyResponse {}

message GetAttrRequest {
  string path = 1;
  string image_digest = 2;
}

message GetAttrResponse {
  File file = 1;
}

message ReadDirRequest {
  string path = 1;
  string image_digest = 2;
}

message ReadDirResponse {
  repeated File entries = 1;
}

message OpenRequest {
  string path = 1;
  uint32 flags = 2;
}

message OpenResponse {
  uint64 handle = 1;
}

message ReadRequest {
  uint64 handle = 1;
  uint64 offset = 2;
  uint32 size = 3;
}

message ReadResponse {
  bytes data = 1;
}

// FuseService defines the FUSE filesystem service
service FuseService {
  // PrepareImage prepares a container image for use with the FUSE filesystem
  rpc PrepareImage(PrepareImageRequest) returns (PrepareImageResponse) {}

  // ImageReady indicates that the image is ready for use
  rpc ImageReady(ImageReadyRequest) returns (ImageReadyResponse) {}

  // GetAttr gets the attributes of a file or directory
  rpc GetAttr(GetAttrRequest) returns (GetAttrResponse) {}

  // ReadDir reads a directory's contents
  rpc ReadDir(ReadDirRequest) returns (ReadDirResponse) {}

  // Open opens a file for reading
  rpc Open(OpenRequest) returns (OpenResponse) {}

  // Read reads data from an open file
  rpc Read(ReadRequest) returns (ReadResponse) {}
}
